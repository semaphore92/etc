** k8s 기초 명령어
 (kubectl run 명령어)
    - kubectl run --help

 (도커 허브에서 nginx 이미지를 가져오는 법)
    - kubectl run nginx --image nginx

 (Pods 리스트 조회)
    - kubectl get pods
 (배치 노드 확인)
    - kubectl get pods -o wide


(yml 파일을 통하여 pod 생성)
    - kubectl create -f pod-definition.yml

(pods의 상세정보를 확인할때)
    - kubectl describe pod {myapp-pod}

(pod delete)
    - kubectl delete pod webapp
    - k delete rs {replicaSet_Name}

(deployment delete) 
     - kubectl delete deployment {image_name}

(pod의 정보 수정)
     - kubectl edit pod {image_name}	

       혹은 yaml 파일을 바꾸고
     - kubectl apply -f {yaml_file}
--------------------------------------------------------------------------------------------------------------------

(replication controller 생성)
     - kubectl create -f rc-definition.yaml	

(replication controller list 조회)
     - kubectl get replicationcontroller	

(replicaset 설정 변경)
     - kubectl replace -f relicaset-definition.yaml

(replicaset scale 증가)
     - kubectl scale --replicas=6 -f replicaset-definition.yml
     - kubectl scale --replicas=6 replicaset myapp-replicaset

(replicaset edit으로 변경)
     - k edit rs {replicaset_name}

---------------------------deployment ---------------------------------

	- k create deployemnt redis-deploy --image-redis --replicas=2 -n dev-ns

---------------------------namespaces ---------------------------------

(namespace 생성)
	- k create namespace dev-ns

---------------------------Imperative Commands ---------------------------------
(pod 즉각 실행 명령어)
     - kubectl run {name} --image={image_name} --labels="tier=db"

(클러스터 내에서 포트 '6379'의 'redis' 애플리케이션을 표시하는 서비스 'redis-service'를 생성합니다)
expose 애플리케이션을 외부에 노출하는데 사용되는 명령어
expose 명령어를 사용하여 Service 객체를 만들 수 있다. Service는 Pod를 추상화하는 k8s 오브젝트이다.
     - k expose pod redis --port 6379 --name redis-service

     - k create deployment webapp --image={image_name} --replicas=3

     - k run custom-nginx --image nginx --port 8080

     - k run httpd --image=httpd:alpine --port=80 --expose=true



   
